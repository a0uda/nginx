log_format upstreamlog '$server_name to: $upstream_addr [$request] '
        'upstream_response_time $upstream_response_time'
        'msec $msec request_time';

#map $http_upgrade $connection_upgrade {
  #  default upgrade;
   # '' close;
#}
events {
    worker_connections 1024;
}   

map $status $loggable {
        ~^204  "Preflight request received";
        default "";
    }
upstream frontend{
    # server frontend:2998;
    # server frontend:2999;
    server frontend:3000;
}

upstream backend{
    server backend1:3001;
    server backend2:3002;
    server backend3:3003;
}

upstream backend_socket {
    server backend3:3003;
}
server{
    listen 80;
    location /{
        return 301 https://$host$request_uri;  
    }     
}


server{
    listen 443 ssl http2;
    server_name redditech.me;

    ssl_certificate /etc/nginx/ssl/redditech_me.crt;
    ssl_certificate_key /etc/nginx/ssl/redditech_me.key;


    access_log /var/log/nginx/access.log upstreamlog;

    location /socket.io {
    proxy_pass http://backend_socket;
    proxy_http_version 2;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /backend/chats/send/ {
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }
        rewrite ^/backend/(.*) /$1 break;
        proxy_pass http://backend_socket;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;   
    }
    location /backend{
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }
        rewrite /backend/(.*) /$1 break;
        proxy_pass http://backend/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;   
    }


    location /{
        proxy_pass http://frontend;
    }
}
